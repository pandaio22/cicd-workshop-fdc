name: CD
run-name: ${{ github.actor }} is running the CD ‚öôÔ∏è
on:
  # Runs this everytime a PR is merged against main
  push:
    branches:
      - main

jobs:
    build-lint-test-deploy:
        runs-on: ubuntu-latest
        steps:
          # Fetches the GitHub repository files
          - name: Check out repository code 
            uses: actions/checkout@v4
          
          # Authenticates in GCP with the provided user credentials.
          # Provides secure, temporary credentials for GCP.
          # Supports authentication using Service Account Key JSONs (less secure, legacy method).
          - name: Authenticate with GCP 
            uses: google-github-actions/auth@v1
            with:
              credentials_json: ${{ secrets.GCP_SA_KEY }}

          # Set the default GCP project for subsequent gcloud commands in your environment. 
          - name: Configure GCP Project
            run: gcloud config set project ${{ vars.GCP_PROJECT_ID }}

          - name: Flutter Web Build
            run: flutter build web

          # Configure Docker authentication for interacting with Artifact Registry, allowing you to push or pull Docker images securely.
          # Build the docker image and push top artifact registry.
          - name: Build and Push Docker Image üê≥
            run: |
              gcloud auth configure-docker --quiet
              gcloud auth configure-docker europe-west3-docker.pkg.dev --quiet
              docker build -t europe-west3-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GCP_ARTIFACT_REGISTRY }}/cicd-12:v1 .
              docker push europe-west3-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GCP_ARTIFACT_REGISTRY }}/cicd-12:v1
          
          - name:
            run: gcloud run deploy cicd-12 --image europe-west3-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GCP_ARTIFACT_REGISTRY }}/cicd-12:v1 --region us-central

          - name: This will be your CD ‚öôÔ∏è
            run: echo "This will be your CD ‚öôÔ∏è"
